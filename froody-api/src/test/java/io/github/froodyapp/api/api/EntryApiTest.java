/*
 * Froody API
 * API for Froody - http://froody-app.at/
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.github.froodyapp.api.api;

import io.github.froodyapp.api.invoker.ApiException;
import io.github.froodyapp.api.model_.FroodyEntry;
import io.github.froodyapp.api.model_.ResponseEntryAdd;
import io.github.froodyapp.api.model_.ResponseOk;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EntryApi
 */
@Ignore
public class EntryApiTest {

    private final EntryApi api = new EntryApi();

    
    /**
     * Add a FroodyEntry with details
     *
     * The Entry/Add endpoint returns a result, if the transmitted FroodyEntry could be created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void entryAddPostTest() throws ApiException {
        Long userId = null;
        String geohash = null;
        Integer entryType = null;
        Integer distributionType = null;
        Integer certificationType = null;
        String description = null;
        String contact = null;
        String address = null;
        ResponseEntryAdd response = api.entryAddPost(userId, geohash, entryType, distributionType, certificationType, description, contact, address);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Entry ** Get details of one entry
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void entryByIdGetTest() throws ApiException {
        Long entryId = null;
        FroodyEntry response = api.entryByIdGet(entryId);

        // TODO: test validations
    }
    
    /**
     * Delete an Entry
     *
     * Delete entry by code, userId and entryId
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void entryDeleteGetTest() throws ApiException {
        Long userId = null;
        Integer managementCode = null;
        Long entryId = null;
        ResponseOk response = api.entryDeleteGet(userId, managementCode, entryId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Entry.entryType[ ] ** Get a list of popular entry types on server (includes 1+8 blocks around geohash block)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void entryPopularEntryTypesGetTest() throws ApiException {
        String geohash = null;
        List<Integer> response = api.entryPopularEntryTypesGet(geohash);

        // TODO: test validations
    }
    
}
